plugins {
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'java'
}

group = 'com.esatic'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Ajout pour la documentation API (optionnel mais recommandé)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// Jackson pour manipulation JSON (déjà inclus via spring-boot-starter-web, mais explicité ici)
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

// Configuration des profils pour la génération de données
bootRun {
	systemProperty 'spring.profiles.active', System.getProperty('spring.profiles.active', 'dev')
}

test {
	useJUnitPlatform()
}

tasks.named('bootJar') {
	archiveFileName = 'backend-assignment-esatic.jar'
}
springBoot {
	mainClass = 'com.esatic.assignmentapp.AssignmentAppApplication'
}
